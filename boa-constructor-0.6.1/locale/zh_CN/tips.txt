在调色板的新标签上创建新源文件.
wxApp模块也将作为wxPython程序的项目文件. 对于纯Python项目, 在新调色板中选择PythonApp.
可以直接从操作系统文件管理器中拖拽文件到Boa上.
Boa支持文件启动时包含命令行参数. 也可以在指针添加处包括行数 ::<lineno>
当Boa运行在服务器模式下, 同时其他Boa在命令行启动一个文件, 文件名被第一个Boa忽略(通过一个接口)并直接打开.
当启动时只有编辑器窗口时Boa支持'收缩'模式. 输入命令行参数-C使用此模式.
做可再生测试时会引起Boa崩溃而且十分冒险, 可以使用命令行参数-T运行跟踪模式的Boa. 这样会创建每个函数调用的(大)日志. 在崩溃后, 重启Boa, 打开Boa.py然后选择文件->查看崩溃日志, 片刻之后日志会创建回溯.
田间一个控件至框架, 在调色板中选择控件然后点击设计器中你想要放置的区域.
定义一个事件: 首先选择控件, 进入检视器当中的事件页面, 选择事件目录然后双击事件.
构造器属性不是动态的(目前为止). 一个框架在应用修改之前必须被关闭然后重新开启.
双击一个组件来打开默认编辑器或定义默认事件.
多选组件: 选择组件时按住shift键. 只有同一级别的控件才可以多选.
当一个控件被选择后, 使用光标键选择同一级别的其他控件.
控件可以通过按住shift键和使用光标键或者按住ctrl键和使用光标键来控制大小. 移动会同时应用到多个选项.
多个选项可以同一排列和修改大小. 选中多个选项, 点击右键选择'排列...'或'修改大小...'
控件中的创建/标签顺序可以进行更改: 选定后右键点击容器选择'创建/标签顺序...'. 当提交设计器后, 控件会按照新顺序保存.
当使用wxFrame时可以在上面创建多个控件, 强烈建议将控件放置在wxPanel上而不是直接放在框架上. 菜单栏, 工具栏或状态栏, 类似这样的容器控件也可以直接添加至框架.
在视图菜单中可以针对每一种模块类型绑定不同的视图.
锚点可以用来管理窗口设计. 短锚点可以使控件的一边贴住父组件相同的一边.
锚点结合在设计器中; 右键点击设计器的选项标签可以看到一个用来绑定锚点的菜单.
设计器支持复制/粘贴操作. 也支持直接从设计器中复制组件然后直接粘贴到源文件中.
修改管理器中项目的属性, 可以在ListCtrl中选中项目然后选择检视器.
在wxNotebook(红色斜线)中的空白页必须添加一个控件否则会生成无效代码.
在图像控件上的斜线表示位图当前仍然设置为wxNullBitmap.
在'有效'页上的组件是非可视对象, 必须在数据视图(在设计器打开时, 在编辑器中打开的白色页面)中创建
单独测试框架类型模块而不运行wxApp模块, 可以选择编辑->添加简单程序. 代码会被添加至文件底部. 这样就可以点击运行模块(蓝色播放按钮)
参数设置可以通过管理器和检视器来访问. 在管理器中选择参数设置并双击所选项, 然后在监视器中修改设置.
大多数参数设置都有帮助. 将鼠标指针停留在检视器的参数名上会显示提示.
有一些参数设置只有当Boa重启后修改才会生效. 一些值只有在启动中才会用到.
参数设置保存在Preferences.py, prefs.rc.py, prefs.(msw|gtk).rc.py和prefskeys.rc.py中. 这些文件有可能在Boa根目录或你的.boa目录中.
可以在Preferences.Source中修改管理器中的源文件编辑器的颜色和字体
可以在Preferences.Key捆绑中修改管理器中的Boa加速器键的设定
支持非美国键盘. 在参数设置中将handleSpecialEuropeanKeys设置为真. 在euroKeysCountry中修改国家. 如果键盘不被支持, 请添加键盘并发给我, 详情见View/wxStyledTextCtrls.py
如果你有HOME环境变量设置, 并在home中创建一个名为'.boa'的目录, Boa会自动保存设定和参数在此文件夹下. .boa目录也包括'docs-cache'和'Plug-ins'目录.
在Win9x系统中因为稳定性的关系默认关闭COM支持. WinNT/Win2000中默认为开启. 如果需要观看wxPython演示中的COM演示请在参数设置下代开COM支持.
ActiveX控件不能自动添加值调色板中. 必须写一个想添加控件的薄包装. 查看Companions/Comcompanions.py和Bcrtl/ativex.
在源代码编辑器中将光标放置在一个单词上并按下F1会看到帮助内容.
提供代码自动完成和呼叫帮助. 默认的快捷键是Ctrl-Space和Ctrl-Shift-Space.
当文字变成超链接时, 可以点击它跳转至声明处或初始化处(如果能找到的话).
代码转换上下文依靠(光标位置)代码自动完成. 目前为止; 添加一个方法定义则需要在已知类中定义; 在方法中编写继承调用到基类.
当离开指定行时会执行Python源文件的语法检查. 错误处会标注有红色花体字并有下划线. 此功能有些耗费资源, 可以在参数设置中关闭.
管理器结合有CVS. 需要安装和运行命令行的cvs. 当CVS仓库被取出后, CVS目录会显示为蓝色. 打开文件夹可以查看文件的CVS状态也可以执行诸如上传和提交之类的CVS操作.
在管理器目录树顶部的代码是被编辑器调用的, 显示IDE中所有打开模块的列表. 可以更改模块的顺序, 也可以一次关闭一组文件.
文件可以被复制/粘贴, 标记, 打开, 标记和保存. 并可以在:文件系统, FTP, DAV, SSH和Zope中转换.
Boa支持编辑和管理Zope对象. 需要导入zoa.zexp文件至Zope根目录. 文件在ZopeLib目录中.
如果Zope服务器在本地运行或者在网络驱动器中运行, 请在转换->Zope中定义项目的本地路径属性. 这样会增强导入Zope对象和打开ExternalMethods.
在管理器中监视和修改项目属性, 在打开项目之前右键点击并选择重载.
添加非文件系统传送的新定义, 在管理器目录树中选择传送然后右键点击选择新建或在工具栏中点击它. 重命名此项. 然后点击视察并设置此项. 在点击重载后打开新的传送.
一些控件进程事件与普通的有所区别, 在设计器中选择或移动时不注册鼠标事件. 在检视器的'Objs'页面选择这些控件.
欢迎使用您自己的控件或已存在控件的扩展, 文件类型或传送来扩充Boa. 在Plug-ins目录中的所有模块都会在启动时执行. 此项默认为关闭. 可以在参数设置中开启. 例子请查看Plug-ins/UserCompanions.py.
支持distutils. 在新调色板上, 点击安装会创建setup.py脚本. 此脚本必须手动维护, 但是distutils命令可以在文件菜单中运行.
如果安装有py2exe, 可以在文件菜单的setup.py模块中调用它.
默认Boa在当前程序目录启动(可设置一个快捷方式'启动'). 也可以在Preferences.Generalh中设置exWorkingDirectory项来修改. 在管理器目录树中, os.cwd节点显示当前工作路径.
启动wxPython对象(包括wxSTC)有各自的__doc__属性, 这些属性定义了wxWindows的html帮助中的文字版本.
签名方法也python化了并使用wxPython对象参数调用提示. 也可以在shell中显示类或类.方法的__doc__属性.
菜单项和工具栏工具有ItemId属性, 用来生成项目的窗口id, 也用来表示事件的方法名. 在绑定事件前修改这个属性.
内置窗口id(例如wxID_OK, wxID_CANCEL等等)会被设计器标记. 可以在生成代码中修改这些id. 请保持定义窗口id处的列表中的命名.